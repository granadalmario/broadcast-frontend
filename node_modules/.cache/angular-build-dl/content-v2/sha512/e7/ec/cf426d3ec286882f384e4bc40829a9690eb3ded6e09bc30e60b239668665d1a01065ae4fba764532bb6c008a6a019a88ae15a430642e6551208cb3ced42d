{"version":3,"sources":["webpack:///src/app/empleados/add-edit.component.ts","webpack:///src/app/empleados/add-edit.component.html","webpack:///src/app/empleados/empleados-routing.module.ts","webpack:///src/app/empleados/empleados.module.ts","webpack:///src/app/empleados/layout.component.ts","webpack:///src/app/empleados/layout.component.html","webpack:///src/app/empleados/list.component.ts","webpack:///src/app/empleados/list.component.html"],"names":["AddEditComponent","formBuilder","route","router","accountService","alertService","loading","submitted","id","snapshot","params","isAddMode","passwordValidators","minLength","push","required","form","group","firstName","lastName","username","password","link","nacionalidad","ciudad","edad","email","movil","altura","peso","getEmpleadoById","pipe","subscribe","x","f","setValue","clear","invalid","createEmpleado","updateEmpleado","registerEmpleado","value","data","success","keepAfterRouteChange","navigate","relativeTo","error","controls","onSubmit","templateUrl","routes","path","component","children","EmpleadosRoutingModule","forChild","imports","exports","EmpleadosModule","declarations","LayoutComponent","ListComponent","empleados","getAllEmpleados","user","find","isDeleting","deleteEmpleado","filter"],"mappings":"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","file":"empleados-empleados-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\n\n@Component({ templateUrl: 'add-edit.component.html' })\nexport class AddEditComponent implements OnInit {\n    form: FormGroup;\n    id: string;\n    isAddMode: boolean;\n    loading = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) {}\n\n    ngOnInit() {\n        this.id = this.route.snapshot.params['id'];\n        this.isAddMode = !this.id;\n        \n        // password not required in edit mode\n        const passwordValidators = [Validators.minLength(6)];\n        if (this.isAddMode) {\n            passwordValidators.push(Validators.required);\n        }\n\n        this.form = this.formBuilder.group({\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            username: ['', Validators.required],\n            password: ['', passwordValidators],\n            link: ['', Validators.required],\n            nacionalidad: ['', Validators.required],\n            ciudad: ['', Validators.required],\n            edad: ['', Validators.required],\n            email: ['', Validators.required],\n            movil: ['', Validators.required],\n            altura: ['', Validators.required],\n            peso: ['', Validators.required],\n        });\n\n        if (!this.isAddMode) {\n            this.accountService.getEmpleadoById(this.id)\n                .pipe(first())\n                .subscribe(x => {\n                    this.f.firstName.setValue(x.firstName);\n                    this.f.lastName.setValue(x.lastName);\n                    this.f.username.setValue(x.username);\n                    this.f.link.setValue(x.link);\n                    this.f.nacionalidad.setValue(x.nacionalidad);\n                    this.f.ciudad.setValue(x.ciudad);\n                    this.f.edad.setValue(x.edad);\n                    this.f.email.setValue(x.email);\n                    this.f.movil.setValue(x.movil);\n                    this.f.altura.setValue(x.altura);\n                    this.f.peso.setValue(x.peso);\n                });\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        if (this.isAddMode) {\n            this.createEmpleado();\n        } else {\n            this.updateEmpleado();\n        }\n    }\n\n    private createEmpleado() {\n        this.accountService.registerEmpleado(this.form.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.alertService.success('Empleado added successfully', { keepAfterRouteChange: true });\n                    this.router.navigate(['.', { relativeTo: this.route }]);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n\n    private updateEmpleado() {\n        this.accountService.updateEmpleado(this.id, this.form.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.alertService.success('Empleado successful', { keepAfterRouteChange: true });\n                    this.router.navigate(['..', { relativeTo: this.route }]);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n}","<h1 *ngIf=\"isAddMode\">Añadir Empleado</h1>\n<h1 *ngIf=\"!isAddMode\">Editar Empleado</h1>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"firstName\"> Nombre</label>\n            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"lastName\">Apellido</label>\n            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"username\">Username</label>\n            <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n            <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.username.errors.required\">Username is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"password\">\n                Password\n                <em *ngIf=\"!isAddMode\">(Leave blank to keep the same password)</em>\n            </label>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"link\"> Link</label>\n            <input type=\"text\" formControlName=\"link\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.link.errors }\" />\n            <div *ngIf=\"submitted && f.link.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.link.errors.required\">Link is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"nacionalidad\">Nacionalidad</label>\n            <input type=\"text\" formControlName=\"nacionalidad\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.nacionalidad.errors }\" />\n            <div *ngIf=\"submitted && f.nacionalidad.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.nacionalidad.errors.required\">Nacionalidad is required</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"ciudad\"> Ciudad</label>\n            <input type=\"text\" formControlName=\"ciudad\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.ciudad.errors }\" />\n            <div *ngIf=\"submitted && f.ciudad.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.ciudad.errors.required\">Ciudad is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"edad\">Edad</label>\n            <input type=\"number\" min=\"18\" max=\"100\" ng-model=\"qty.qty\" size=\"20\" formControlName=\"edad\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.edad.errors }\" />\n            <div *ngIf=\"submitted && f.edad.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.edad.errors.required\">Edad is required</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"email\"> Email</label>\n            <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.email.errors.required\">Email is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"movil\">Móvil</label>\n            <input type=\"number\"  formControlName=\"movil\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.movil.errors }\" />\n            <div *ngIf=\"submitted && f.movil.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.movil.errors.required\">Movil is required</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"altura\"> Altura</label>\n            <input type=\"text\" formControlName=\"altura\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.altura.errors }\" />\n            <div *ngIf=\"submitted && f.altura.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.altura.errors.required\">Altura is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"peso\">Peso</label>\n            <input type=\"number\" min=\"18\" max=\"100\" ng-model=\"qty.qty\" size=\"20\" formControlName=\"peso\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.peso.errors }\" />\n            <div *ngIf=\"submitted && f.peso.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.peso.errors.required\">Peso is required</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Save\n        </button>\n        <a routerLink=\"/empleados\" class=\"btn btn-link\">Cancel</a>\n    </div>\n</form>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutComponent } from './layout.component';\nimport { ListComponent } from './list.component';\nimport { AddEditComponent } from './add-edit.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: LayoutComponent,\n        children: [\n            { path: '', component: ListComponent },\n            { path: 'add', component: AddEditComponent },\n            { path: 'edit/:id', component: AddEditComponent }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class EmpleadosRoutingModule { }","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { EmpleadosRoutingModule } from './empleados-routing.module';\nimport { LayoutComponent } from './layout.component';\nimport { ListComponent } from './list.component';\nimport { AddEditComponent } from './add-edit.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        EmpleadosRoutingModule\n    ],\n    declarations: [\n        LayoutComponent,\n        ListComponent,\n        AddEditComponent\n    ]\n})\nexport class EmpleadosModule { }","import { Component } from '@angular/core';\n\n@Component({ templateUrl: 'layout.component.html' })\nexport class LayoutComponent { }","<div class=\"p-4\">\n    <div class=\"container\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService } from '@app/_services';\n\n@Component({ templateUrl: 'list.component.html' })\nexport class ListComponent implements OnInit {\n    empleados = null;\n\n    constructor(private accountService: AccountService) {}\n\n    ngOnInit() {\n        this.accountService.getAllEmpleados()\n            .pipe(first())\n            .subscribe(empleados => this.empleados = empleados);\n    }\n\n    deleteEmpleado(id: string) {\n        const user = this.empleados.find(x => x.id === id);\n        user.isDeleting = true;\n        this.accountService.deleteEmpleado(id)\n            .pipe(first())\n            .subscribe(() => {\n                this.empleados = this.empleados.filter(x => x.id !== id) \n            });\n    }\n}","<h1>Empleados</h1>\n<a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Añadir Empleado</a>\n<table class=\"table table-striped\">\n    <thead>\n        <tr>\n            <th style=\"width: 30%\">Nombre</th>\n            <th style=\"width: 30%\">Email</th>\n            <th style=\"width: 30%\">Ciudad</th>\n            <th style=\"width: 10%\"></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let empleado of empleados\">\n            <td>{{empleado.firstName}}</td>\n            <td>{{empleado.movil}}</td>\n            <td>{{empleado.ciudad}}</td>\n            <td style=\"white-space: nowrap\">\n                <a routerLink=\"edit/{{empleado.id}}\" class=\"btn btn-sm btn-primary mr-1\">Edit</a>\n                <button (click)=\"deleteEmpleado(empleado.id)\" class=\"btn btn-sm btn-danger btn-delete-empleado\" [disabled]=\"empleado.isDeleting\">\n                    <span *ngIf=\"empleado.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\n                    <span *ngIf=\"!empleado.isDeleting\">Delete</span>\n                </button>\n            </td>\n        </tr>\n        <tr *ngIf=\"!empleados\">\n            <td colspan=\"4\" class=\"text-center\">\n                <span class=\"spinner-border spinner-border-lg align-center\"></span>\n            </td>\n        </tr>\n    </tbody>\n</table>"]}